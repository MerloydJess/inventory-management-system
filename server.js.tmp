// Temporary file to hold fixed server code
function addMissingColumns(callback) {
  const columnsToAdd = [
    { table: "returns", column: "returned_by_location", type: "TEXT" },
    { table: "returns", column: "received_by_location", type: "TEXT" },
    { table: "returns", column: "second_received_by_location", type: "TEXT" },
    { table: "returns", column: "created_by", type: "INTEGER REFERENCES users(id)" },
    { table: "employee", column: "employee_id", type: "TEXT UNIQUE" }
  ];

  let completed = 0;
  const total = columnsToAdd.length;

  function checkDone() {
    completed += 1;
    if (completed === total) {
      console.log("✅ All missing columns checked/added.");
      // Add test employee after columns are added
      addTestEmployee(() => {
        if (callback) callback();
      });
    }
  }

  // Process each column
  columnsToAdd.forEach(({ table, column, type }) => {
    db.get(
      `SELECT COUNT(*) as count FROM pragma_table_info('${table}') WHERE name='${column}'`,
      [],
      (err, result) => {
        if (err) {
          console.error(`❌ Error checking column ${column}:`, err.message);
          checkDone();
          return;
        }

        if (result.count === 0) {
          db.run(`ALTER TABLE ${table} ADD COLUMN ${column} ${type}`, (err) => {
            if (err) {
              console.error(`❌ Error adding column ${column}:`, err.message);
            } else {
              console.log(`✅ Added ${column} to ${table}`);
            }
            checkDone();
          });
        } else {
          console.log(`✅ Column ${column} already exists in ${table}`);
          checkDone();
        }
      }
    );
  });
}

// Function to add test employee
function addTestEmployee(callback) {
  db.get("SELECT * FROM employee WHERE employee_id = 'EMP001'", [], (err, row) => {
    if (err) {
      console.error("❌ Error checking for test employee:", err.message);
      if (callback) callback();
      return;
    }

    if (!row) {
      db.run(
        `INSERT INTO employee (name, position, department, email, contact_number, address, employee_id) 
         VALUES (?, ?, ?, ?, ?, ?, ?)`,
        ['John Doe', 'Staff', 'IT', 'john@example.com', '123456789', 'Manila', 'EMP001'],
        (err) => {
          if (err) {
            console.error("❌ Error creating test employee:", err.message);
          } else {
            console.log("✅ Test employee created (ID: EMP001)");
          }
          if (callback) callback();
        }
      );
    } else {
      if (callback) callback();
    }
  });
}
